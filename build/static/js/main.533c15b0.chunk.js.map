{"version":3,"sources":["components/Weather/WeatherPanel/WeatherPanel.module.css","components/common/preloader/preloadar.module.css","redux/weatherReducer.js","components/common/preloader/preloader.jsx","components/Weather/WeatherPanel/WeatherPanel.jsx","components/Weather/Weather.jsx","components/Weather/WeatherContainer.jsx","App.js","redux/redux-store.js","index.js","components/Weather/Weather.module.css"],"names":["module","exports","initialState","places","id","name","loc","weatherData","currentPlace","isFetching","isError","weatherReducer","state","action","type","weather","Preloader","className","style","preloader","load","error","errorText","WeatherPanel","data","parseDate","Date","time","panel","title","parent","subtitle","toDateString","consolidated_weather","filter","_","index","map","item","generalInfo","key","tempInfo","theTemp","the_temp","Math","round","src","weather_state_abbr","alt","condition","weather_state_name","additionalInformation","aiItem","aiItem__title","aiItem__value","humidity","visibility","toFixed","air_pressure","predictability","Weather","onPageChanged","toggles","place","onClick","city","active","WeatherContainer","currentNum","zip","props","toggleIsFetching","toggleIsError","setCurrent","axios","then","response","setWeather","catch","this","React","Component","connect","weatherPage","App","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.533c15b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"WeatherPanel_panel__2Bq0U\",\"show\":\"WeatherPanel_show__2pEdd\",\"title\":\"WeatherPanel_title__13K9c\",\"subtitle\":\"WeatherPanel_subtitle__2xVT_\",\"tempInfo\":\"WeatherPanel_tempInfo__XF6dU\",\"theTemp\":\"WeatherPanel_theTemp__30LN_\",\"additionalInformation\":\"WeatherPanel_additionalInformation__2y59l\",\"aiItem\":\"WeatherPanel_aiItem__3qsQn\",\"aiItem__title\":\"WeatherPanel_aiItem__title__2CfBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloadar_preloader__2dAlN\",\"load\":\"preloadar_load__3ThqG\",\"rotateLoad\":\"preloadar_rotateLoad__2GiEx\",\"mini\":\"preloadar_mini__dzMfA\",\"little\":\"preloadar_little__36G0H\",\"scaleChange_1\":\"preloadar_scaleChange_1__2Ary2\",\"scaleChange_2\":\"preloadar_scaleChange_2__-iYkU\",\"error\":\"preloadar_error__1WYTj\",\"errorText\":\"preloadar_errorText__1gdcG\",\"show\":\"preloadar_show__j7MsJ\"};","const SET_WEATHER = 'SET_WEATHER';\nconst SET_CURRENT = 'SET_CURRENT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_ERROR = 'TOGGLE_IS_ERROR';\n\nconst initialState = {\n  places: [\n    { id: 1, name: 'Paris', loc: '615702' },\n    { id: 2, name: 'Moscow', loc: '2122265' },\n    { id: 3, name: 'Berlin', loc: '638242' },\n  ],\n  weatherData: null,\n  currentPlace: 0,\n  isFetching: true,\n  isError: false,\n};\n\nconst weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_WEATHER:\n      return { ...state, weatherData: action.weather };\n\n    case SET_CURRENT: {\n      return { ...state, currentPlace: action.currentPlace };\n    }\n\n    case TOGGLE_IS_FETCHING: {\n      return { ...state, isFetching: action.isFetching };\n    }\n\n    case TOGGLE_IS_ERROR: {\n      return { ...state, isError: action.isError };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const setWeather = (weather) => ({ type: SET_WEATHER, weather });\nexport const setCurrent = (currentPlace) => ({\n  type: SET_CURRENT,\n  currentPlace,\n});\nexport const toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\nexport const toggleIsError = (isError) => ({ type: TOGGLE_IS_ERROR, isError });\n\nexport default weatherReducer;\n","import React from 'react';\nimport style from './preloadar.module.css';\n\nconst Preloader = ({ isError }) => (\n  <div className={style.preloader}>\n    <span className={`${style.load}${isError ? ` ${style.error}` : ''}`} />\n    {isError ? <span className={`${style.errorText}`}>Failed loading weather data, please try again later</span> : ''}\n  </div>\n);\n\nexport default Preloader;\n","import React from 'react';\nimport style from './WeatherPanel.module.css';\n\nconst WeatherPanel = ({ weatherData: data }) => {\n  const parseDate = new Date(data.time);\n  return (\n    <div className={style.panel}>\n      <div className={style.title}>\n        <span>{data.title}</span>, {data.parent.title}\n      </div>\n      <div className={style.subtitle}>{parseDate.toDateString()}</div>\n      {data.consolidated_weather\n        .filter((_, index) => index === 0)\n        .map((item) => (\n          <div className={style.generalInfo} key={item.id}>\n            <div className={style.tempInfo}>\n              <div className={style.theTemp}>\n                {item.the_temp > 0 ? `+${Math.round(item.the_temp)}°` : `${Math.round(item.the_temp)}°`}\n              </div>\n              <img src={`https://www.metaweather.com/static/img/weather/${item.weather_state_abbr}.svg`} alt=\"\" />\n              <div className={style.condition}>{item.weather_state_name}</div>\n            </div>\n            <div className={style.additionalInformation}>\n              <div className={style.aiItem}>\n                <div className={style.aiItem__title}>Humidity</div>\n                <div className={style.aiItem__value}>{item.humidity}%</div>\n              </div>\n              <div className={style.aiItem}>\n                <div className={style.aiItem__title}>Visibility</div>\n                <div className={style.aiItem__value}>{item.visibility.toFixed(1)} miles</div>\n              </div>\n              <div className={style.aiItem}>\n                <div className={style.aiItem__title}>Pressure</div>\n                <div className={style.aiItem__value}>\n                  {Math.round(item.air_pressure)}\n                  mb\n                </div>\n              </div>\n              <div className={style.aiItem}>\n                <div className={style.aiItem__title}>Confidence</div>\n                <div className={style.aiItem__value}>{item.predictability}%</div>\n              </div>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default WeatherPanel;\n","import React from 'react';\nimport Preloader from '../common/preloader/preloader';\nimport style from './Weather.module.css';\nimport WeatherPanel from './WeatherPanel/WeatherPanel';\n\nconst Weather = ({ places, onPageChanged, currentPlace, isError, weatherData, isFetching }) => (\n  <div className={style.weather}>\n    <div className={style.toggles}>\n      {places.map((place, index) => (\n        <button\n          onClick={() => {\n            onPageChanged(index, place.loc);\n          }}\n          className={`${style.city} ${currentPlace === index ? style.active : ''}`}\n          key={place.id}\n        >\n          {place.name}\n        </button>\n      ))}\n    </div>\n    {isFetching ? <Preloader isError={isError} /> : <WeatherPanel weatherData={weatherData} />}\n  </div>\n);\n\nexport default Weather;\n","import * as axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrent, setWeather, toggleIsError, toggleIsFetching } from '../../redux/weatherReducer';\nimport Weather from './Weather';\n\nclass WeatherContainer extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    this.props.toggleIsError(false);\n    axios\n      .get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/615702/`)\n      .then((response) => {\n        this.props.setWeather(response.data);\n        this.props.toggleIsFetching(false);\n      })\n      .catch(() => this.props.toggleIsError(true));\n  }\n\n  onPageChanged = (currentNum, zip) => {\n    this.props.toggleIsFetching(true);\n    this.props.toggleIsError(false);\n    this.props.setCurrent(currentNum);\n    axios\n      .get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${zip}/`)\n      .then((response) => {\n        this.props.setWeather(response.data);\n        this.props.toggleIsFetching(false);\n      })\n      .catch(() => this.props.toggleIsError(true));\n  };\n\n  render() {\n    return (\n      <Weather\n        weatherData={this.props.weatherData}\n        onPageChanged={this.onPageChanged}\n        places={this.props.places}\n        toggleIsFetching={this.props.toggleIsFetching}\n        isFetching={this.props.isFetching}\n        isError={this.props.isError}\n        currentPlace={this.props.currentPlace}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  places: state.weatherPage.places,\n  currentPlace: state.weatherPage.currentPlace,\n  weatherData: state.weatherPage.weatherData,\n  isFetching: state.weatherPage.isFetching,\n  isError: state.weatherPage.isError,\n});\n\nexport default connect(mapStateToProps, {\n  setWeather,\n  setCurrent,\n  toggleIsFetching,\n  toggleIsError,\n})(WeatherContainer);\n","import React from 'react';\nimport './App.css';\nimport WeatherContainer from './components/Weather/WeatherContainer';\n\nconst App = () => (\n  <div className=\"App\">\n    <WeatherContainer />\n  </div>\n);\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport weatherReducer from './weatherReducer';\n\nconst reducers = combineReducers({\n  weatherPage: weatherReducer,\n});\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__2lbZE\",\"toggles\":\"Weather_toggles__w63sR\",\"city\":\"Weather_city__2Eh68\",\"active\":\"Weather_active__1ZhBD\"};"],"sourceRoot":""}