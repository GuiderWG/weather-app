{"ast":null,"code":"import _objectSpread from\"E:\\\\github\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var SET_WEATHER='SET_WEATHER';var SET_CURRENT='SET_CURRENT';var TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING';var TOGGLE_IS_ERROR='TOGGLE_IS_ERROR';var initialState={places:[{id:1,name:'Paris',loc:'615702'},{id:2,name:'Moscow',loc:'2122265'},{id:3,name:'Berlin',loc:'638242'}],weatherData:null,currentPlace:0,isFetching:true,isError:false};var weatherReducer=function weatherReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_WEATHER:return _objectSpread(_objectSpread({},state),{},{weatherData:action.weather});case SET_CURRENT:{return _objectSpread(_objectSpread({},state),{},{currentPlace:action.currentPlace});}case TOGGLE_IS_FETCHING:{return _objectSpread(_objectSpread({},state),{},{isFetching:action.isFetching});}case TOGGLE_IS_ERROR:{return _objectSpread(_objectSpread({},state),{},{isError:action.isError});}default:return state;}};export var setWeather=function setWeather(weather){return{type:SET_WEATHER,weather:weather};};export var setCurrent=function setCurrent(currentPlace){return{type:SET_CURRENT,currentPlace:currentPlace};};export var toggleIsFetching=function toggleIsFetching(isFetching){return{type:TOGGLE_IS_FETCHING,isFetching:isFetching};};export var toggleIsError=function toggleIsError(isError){return{type:TOGGLE_IS_ERROR,isError:isError};};export default weatherReducer;","map":{"version":3,"sources":["E:/github/weather-app/src/redux/weatherReducer.js"],"names":["SET_WEATHER","SET_CURRENT","TOGGLE_IS_FETCHING","TOGGLE_IS_ERROR","initialState","places","id","name","loc","weatherData","currentPlace","isFetching","isError","weatherReducer","state","action","type","weather","setWeather","setCurrent","toggleIsFetching","toggleIsError"],"mappings":"kJAAA,GAAMA,CAAAA,WAAW,CAAG,aAApB,CACA,GAAMC,CAAAA,WAAW,CAAG,aAApB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,oBAA3B,CACA,GAAMC,CAAAA,eAAe,CAAG,iBAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,MAAM,CAAE,CACN,CAAEC,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,OAAf,CAAwBC,GAAG,CAAE,QAA7B,CADM,CAEN,CAAEF,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,QAAf,CAAyBC,GAAG,CAAE,SAA9B,CAFM,CAGN,CAAEF,EAAE,CAAE,CAAN,CAASC,IAAI,CAAE,QAAf,CAAyBC,GAAG,CAAE,QAA9B,CAHM,CADW,CAMnBC,WAAW,CAAE,IANM,CAOnBC,YAAY,CAAE,CAPK,CAQnBC,UAAU,CAAE,IARO,CASnBC,OAAO,CAAE,KATU,CAArB,CAYA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBV,YAAyB,IAAXW,CAAAA,MAAW,2CACvD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKhB,CAAAA,WAAL,CACE,sCAAYc,KAAZ,MAAmBL,WAAW,CAAEM,MAAM,CAACE,OAAvC,GAEF,IAAKhB,CAAAA,WAAL,CAAkB,CAChB,sCAAYa,KAAZ,MAAmBJ,YAAY,CAAEK,MAAM,CAACL,YAAxC,GACD,CAED,IAAKR,CAAAA,kBAAL,CAAyB,CACvB,sCAAYY,KAAZ,MAAmBH,UAAU,CAAEI,MAAM,CAACJ,UAAtC,GACD,CAED,IAAKR,CAAAA,eAAL,CAAsB,CACpB,sCAAYW,KAAZ,MAAmBF,OAAO,CAAEG,MAAM,CAACH,OAAnC,GACD,CAED,QACE,MAAOE,CAAAA,KAAP,CAjBJ,CAmBD,CApBD,CAsBA,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,OAAD,QAAc,CAAED,IAAI,CAAEhB,WAAR,CAAqBiB,OAAO,CAAPA,OAArB,CAAd,EAAnB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACT,YAAD,QAAmB,CAC3CM,IAAI,CAAEf,WADqC,CAE3CS,YAAY,CAAZA,YAF2C,CAAnB,EAAnB,CAIP,MAAO,IAAMU,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACT,UAAD,QAAiB,CAC/CK,IAAI,CAAEd,kBADyC,CAE/CS,UAAU,CAAVA,UAF+C,CAAjB,EAAzB,CAIP,MAAO,IAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACT,OAAD,QAAc,CAAEI,IAAI,CAAEb,eAAR,CAAyBS,OAAO,CAAPA,OAAzB,CAAd,EAAtB,CAEP,cAAeC,CAAAA,cAAf","sourcesContent":["const SET_WEATHER = 'SET_WEATHER';\nconst SET_CURRENT = 'SET_CURRENT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_ERROR = 'TOGGLE_IS_ERROR';\n\nconst initialState = {\n  places: [\n    { id: 1, name: 'Paris', loc: '615702' },\n    { id: 2, name: 'Moscow', loc: '2122265' },\n    { id: 3, name: 'Berlin', loc: '638242' },\n  ],\n  weatherData: null,\n  currentPlace: 0,\n  isFetching: true,\n  isError: false,\n};\n\nconst weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_WEATHER:\n      return { ...state, weatherData: action.weather };\n\n    case SET_CURRENT: {\n      return { ...state, currentPlace: action.currentPlace };\n    }\n\n    case TOGGLE_IS_FETCHING: {\n      return { ...state, isFetching: action.isFetching };\n    }\n\n    case TOGGLE_IS_ERROR: {\n      return { ...state, isError: action.isError };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const setWeather = (weather) => ({ type: SET_WEATHER, weather });\nexport const setCurrent = (currentPlace) => ({\n  type: SET_CURRENT,\n  currentPlace,\n});\nexport const toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\nexport const toggleIsError = (isError) => ({ type: TOGGLE_IS_ERROR, isError });\n\nexport default weatherReducer;\n"]},"metadata":{},"sourceType":"module"}