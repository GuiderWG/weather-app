{"ast":null,"code":"var _jsxFileName = \"E:\\\\github\\\\weather-app\\\\src\\\\components\\\\Weather\\\\WeatherContainer.jsx\";\nimport * as axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrent, setWeather, toggleIsError, toggleIsFetching } from '../../redux/weatherReducer';\nimport Weather from './Weather';\n\nclass WeatherContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = (currentNum, zip) => {\n      this.props.toggleIsFetching(true);\n      this.props.toggleIsError(false);\n      this.props.setCurrent(currentNum);\n      axios.get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${zip}/`).then(response => {\n        this.props.setWeather(response.data);\n        this.props.toggleIsFetching(false);\n      }).catch(() => this.props.toggleIsError(true));\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    this.props.toggleIsError(false);\n    axios.get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/615702/`).then(response => {\n      this.props.setWeather(response.data);\n      this.props.toggleIsFetching(false);\n    }).catch(() => this.props.toggleIsError(true));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Weather, {\n      weatherData: this.props.weatherData,\n      onPageChanged: this.onPageChanged,\n      places: this.props.places,\n      toggleIsFetching: this.props.toggleIsFetching,\n      isFetching: this.props.isFetching,\n      isError: this.props.isError,\n      currentPlace: this.props.currentPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  places: state.weatherPage.places,\n  currentPlace: state.weatherPage.currentPlace,\n  weatherData: state.weatherPage.weatherData,\n  isFetching: state.weatherPage.isFetching,\n  isError: state.weatherPage.isError\n});\n\nexport default connect(mapStateToProps, {\n  setWeather,\n  setCurrent,\n  toggleIsFetching,\n  toggleIsError\n})(WeatherContainer);","map":{"version":3,"sources":["E:/github/weather-app/src/components/Weather/WeatherContainer.jsx"],"names":["axios","React","connect","setCurrent","setWeather","toggleIsError","toggleIsFetching","Weather","WeatherContainer","Component","onPageChanged","currentNum","zip","props","get","then","response","data","catch","componentDidMount","render","weatherData","places","isFetching","isError","currentPlace","mapStateToProps","state","weatherPage"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,aAAjC,EAAgDC,gBAAhD,QAAwE,4BAAxE;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAa3CC,aAb2C,GAa3B,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACjC,WAAKC,KAAL,CAAWP,gBAAX,CAA4B,IAA5B;AACA,WAAKO,KAAL,CAAWR,aAAX,CAAyB,KAAzB;AACA,WAAKQ,KAAL,CAAWV,UAAX,CAAsBQ,UAAtB;AACAX,MAAAA,KAAK,CACAc,GADL,CACU,gFAA+EF,GAAI,GAD7F,EAEKG,IAFL,CAEWC,QAAD,IAAc;AAChB,aAAKH,KAAL,CAAWT,UAAX,CAAsBY,QAAQ,CAACC,IAA/B;AACA,aAAKJ,KAAL,CAAWP,gBAAX,CAA4B,KAA5B;AACH,OALL,EAMKY,KANL,CAMW,MAAM,KAAKL,KAAL,CAAWR,aAAX,CAAyB,IAAzB,CANjB;AAOH,KAxB0C;AAAA;;AAC3Cc,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWP,gBAAX,CAA4B,IAA5B;AACA,SAAKO,KAAL,CAAWR,aAAX,CAAyB,KAAzB;AACAL,IAAAA,KAAK,CACAc,GADL,CACU,sFADV,EAEKC,IAFL,CAEWC,QAAD,IAAc;AAChB,WAAKH,KAAL,CAAWT,UAAX,CAAsBY,QAAQ,CAACC,IAA/B;AACA,WAAKJ,KAAL,CAAWP,gBAAX,CAA4B,KAA5B;AACH,KALL,EAMKY,KANL,CAMW,MAAM,KAAKL,KAAL,CAAWR,aAAX,CAAyB,IAAzB,CANjB;AAOH;;AAeDe,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD;AACI,MAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ,WAD5B;AAEI,MAAA,aAAa,EAAE,KAAKX,aAFxB;AAGI,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWS,MAHvB;AAII,MAAA,gBAAgB,EAAE,KAAKT,KAAL,CAAWP,gBAJjC;AAKI,MAAA,UAAU,EAAE,KAAKO,KAAL,CAAWU,UAL3B;AAMI,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,OANxB;AAOI,MAAA,YAAY,EAAE,KAAKX,KAAL,CAAWY,YAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH;;AAtC0C;;AAyC/C,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCL,EAAAA,MAAM,EAAEK,KAAK,CAACC,WAAN,CAAkBN,MADM;AAEhCG,EAAAA,YAAY,EAAEE,KAAK,CAACC,WAAN,CAAkBH,YAFA;AAGhCJ,EAAAA,WAAW,EAAEM,KAAK,CAACC,WAAN,CAAkBP,WAHC;AAIhCE,EAAAA,UAAU,EAAEI,KAAK,CAACC,WAAN,CAAkBL,UAJE;AAKhCC,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ;AALK,CAAZ,CAAxB;;AAQA,eAAetB,OAAO,CAACwB,eAAD,EAAkB;AACpCtB,EAAAA,UADoC;AAEpCD,EAAAA,UAFoC;AAGpCG,EAAAA,gBAHoC;AAIpCD,EAAAA;AAJoC,CAAlB,CAAP,CAKZG,gBALY,CAAf","sourcesContent":["import * as axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrent, setWeather, toggleIsError, toggleIsFetching } from '../../redux/weatherReducer';\nimport Weather from './Weather';\n\nclass WeatherContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        this.props.toggleIsError(false);\n        axios\n            .get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/615702/`)\n            .then((response) => {\n                this.props.setWeather(response.data);\n                this.props.toggleIsFetching(false);\n            })\n            .catch(() => this.props.toggleIsError(true));\n    }\n\n    onPageChanged = (currentNum, zip) => {\n        this.props.toggleIsFetching(true);\n        this.props.toggleIsError(false);\n        this.props.setCurrent(currentNum);\n        axios\n            .get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${zip}/`)\n            .then((response) => {\n                this.props.setWeather(response.data);\n                this.props.toggleIsFetching(false);\n            })\n            .catch(() => this.props.toggleIsError(true));\n    };\n\n    render() {\n        return (\n            <Weather\n                weatherData={this.props.weatherData}\n                onPageChanged={this.onPageChanged}\n                places={this.props.places}\n                toggleIsFetching={this.props.toggleIsFetching}\n                isFetching={this.props.isFetching}\n                isError={this.props.isError}\n                currentPlace={this.props.currentPlace}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    places: state.weatherPage.places,\n    currentPlace: state.weatherPage.currentPlace,\n    weatherData: state.weatherPage.weatherData,\n    isFetching: state.weatherPage.isFetching,\n    isError: state.weatherPage.isError,\n});\n\nexport default connect(mapStateToProps, {\n    setWeather,\n    setCurrent,\n    toggleIsFetching,\n    toggleIsError,\n})(WeatherContainer);\n"]},"metadata":{},"sourceType":"module"}