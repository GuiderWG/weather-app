{"ast":null,"code":"import _classCallCheck from\"E:\\\\github\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\github\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\github\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\github\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import*as axios from'axios';import React from'react';import{connect}from'react-redux';import{setCurrent,setWeather,toggleIsError,toggleIsFetching}from'../../redux/weatherReducer';import Weather from'./Weather';var WeatherContainer=/*#__PURE__*/function(_React$Component){_inherits(WeatherContainer,_React$Component);var _super=_createSuper(WeatherContainer);function WeatherContainer(){var _this;_classCallCheck(this,WeatherContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onPageChanged=function(currentNum,zip){_this.props.toggleIsFetching(true);_this.props.toggleIsError(false);_this.props.setCurrent(currentNum);axios.get(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\".concat(zip,\"/\")).then(function(response){_this.props.setWeather(response.data);_this.props.toggleIsFetching(false);}).catch(function(){return _this.props.toggleIsError(true);});};return _this;}_createClass(WeatherContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.toggleIsFetching(true);this.props.toggleIsError(false);axios.get(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/615702/\").then(function(response){_this2.props.setWeather(response.data);_this2.props.toggleIsFetching(false);}).catch(function(){return _this2.props.toggleIsError(true);});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Weather,{weatherData:this.props.weatherData,onPageChanged:this.onPageChanged,places:this.props.places,toggleIsFetching:this.props.toggleIsFetching,isFetching:this.props.isFetching,isError:this.props.isError,currentPlace:this.props.currentPlace});}}]);return WeatherContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{places:state.weatherPage.places,currentPlace:state.weatherPage.currentPlace,weatherData:state.weatherPage.weatherData,isFetching:state.weatherPage.isFetching,isError:state.weatherPage.isError};};export default connect(mapStateToProps,{setWeather:setWeather,setCurrent:setCurrent,toggleIsFetching:toggleIsFetching,toggleIsError:toggleIsError})(WeatherContainer);","map":{"version":3,"sources":["E:/github/weather-app/src/components/Weather/WeatherContainer.jsx"],"names":["axios","React","connect","setCurrent","setWeather","toggleIsError","toggleIsFetching","Weather","WeatherContainer","onPageChanged","currentNum","zip","props","get","then","response","data","catch","weatherData","places","isFetching","isError","currentPlace","Component","mapStateToProps","state","weatherPage"],"mappings":"4jBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,CAAqBC,UAArB,CAAiCC,aAAjC,CAAgDC,gBAAhD,KAAwE,4BAAxE,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,GAEMC,CAAAA,gB,+WAaJC,a,CAAgB,SAACC,UAAD,CAAaC,GAAb,CAAqB,CACnC,MAAKC,KAAL,CAAWN,gBAAX,CAA4B,IAA5B,EACA,MAAKM,KAAL,CAAWP,aAAX,CAAyB,KAAzB,EACA,MAAKO,KAAL,CAAWT,UAAX,CAAsBO,UAAtB,EACAV,KAAK,CACFa,GADH,wFACuFF,GADvF,OAEGG,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClB,MAAKH,KAAL,CAAWR,UAAX,CAAsBW,QAAQ,CAACC,IAA/B,EACA,MAAKJ,KAAL,CAAWN,gBAAX,CAA4B,KAA5B,EACD,CALH,EAMGW,KANH,CAMS,iBAAM,OAAKL,KAAL,CAAWP,aAAX,CAAyB,IAAzB,CAAN,EANT,EAOD,C,yGAvBmB,iBAClB,KAAKO,KAAL,CAAWN,gBAAX,CAA4B,IAA5B,EACA,KAAKM,KAAL,CAAWP,aAAX,CAAyB,KAAzB,EACAL,KAAK,CACFa,GADH,yFAEGC,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClB,MAAI,CAACH,KAAL,CAAWR,UAAX,CAAsBW,QAAQ,CAACC,IAA/B,EACA,MAAI,CAACJ,KAAL,CAAWN,gBAAX,CAA4B,KAA5B,EACD,CALH,EAMGW,KANH,CAMS,iBAAM,CAAA,MAAI,CAACL,KAAL,CAAWP,aAAX,CAAyB,IAAzB,CAAN,EANT,EAOD,C,uCAeQ,CACP,mBACE,oBAAC,OAAD,EACE,WAAW,CAAE,KAAKO,KAAL,CAAWM,WAD1B,CAEE,aAAa,CAAE,KAAKT,aAFtB,CAGE,MAAM,CAAE,KAAKG,KAAL,CAAWO,MAHrB,CAIE,gBAAgB,CAAE,KAAKP,KAAL,CAAWN,gBAJ/B,CAKE,UAAU,CAAE,KAAKM,KAAL,CAAWQ,UALzB,CAME,OAAO,CAAE,KAAKR,KAAL,CAAWS,OANtB,CAOE,YAAY,CAAE,KAAKT,KAAL,CAAWU,YAP3B,EADF,CAWD,C,8BAtC4BrB,KAAK,CAACsB,S,EAyCrC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCN,MAAM,CAAEM,KAAK,CAACC,WAAN,CAAkBP,MADQ,CAElCG,YAAY,CAAEG,KAAK,CAACC,WAAN,CAAkBJ,YAFE,CAGlCJ,WAAW,CAAEO,KAAK,CAACC,WAAN,CAAkBR,WAHG,CAIlCE,UAAU,CAAEK,KAAK,CAACC,WAAN,CAAkBN,UAJI,CAKlCC,OAAO,CAAEI,KAAK,CAACC,WAAN,CAAkBL,OALO,CAAZ,EAAxB,CAQA,cAAenB,CAAAA,OAAO,CAACsB,eAAD,CAAkB,CACtCpB,UAAU,CAAVA,UADsC,CAEtCD,UAAU,CAAVA,UAFsC,CAGtCG,gBAAgB,CAAhBA,gBAHsC,CAItCD,aAAa,CAAbA,aAJsC,CAAlB,CAAP,CAKZG,gBALY,CAAf","sourcesContent":["import * as axios from 'axios';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrent, setWeather, toggleIsError, toggleIsFetching } from '../../redux/weatherReducer';\nimport Weather from './Weather';\n\nclass WeatherContainer extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    this.props.toggleIsError(false);\n    axios\n      .get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/615702/`)\n      .then((response) => {\n        this.props.setWeather(response.data);\n        this.props.toggleIsFetching(false);\n      })\n      .catch(() => this.props.toggleIsError(true));\n  }\n\n  onPageChanged = (currentNum, zip) => {\n    this.props.toggleIsFetching(true);\n    this.props.toggleIsError(false);\n    this.props.setCurrent(currentNum);\n    axios\n      .get(`https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${zip}/`)\n      .then((response) => {\n        this.props.setWeather(response.data);\n        this.props.toggleIsFetching(false);\n      })\n      .catch(() => this.props.toggleIsError(true));\n  };\n\n  render() {\n    return (\n      <Weather\n        weatherData={this.props.weatherData}\n        onPageChanged={this.onPageChanged}\n        places={this.props.places}\n        toggleIsFetching={this.props.toggleIsFetching}\n        isFetching={this.props.isFetching}\n        isError={this.props.isError}\n        currentPlace={this.props.currentPlace}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  places: state.weatherPage.places,\n  currentPlace: state.weatherPage.currentPlace,\n  weatherData: state.weatherPage.weatherData,\n  isFetching: state.weatherPage.isFetching,\n  isError: state.weatherPage.isError,\n});\n\nexport default connect(mapStateToProps, {\n  setWeather,\n  setCurrent,\n  toggleIsFetching,\n  toggleIsError,\n})(WeatherContainer);\n"]},"metadata":{},"sourceType":"module"}