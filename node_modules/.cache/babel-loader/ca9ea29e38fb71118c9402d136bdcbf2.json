{"ast":null,"code":"const SET_WEATHER = 'SET_WEATHER';\nconst SET_CURRENT = 'SET_CURRENT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_ERROR = 'TOGGLE_IS_ERROR';\nconst initialState = {\n  places: [{\n    id: 1,\n    name: 'Paris',\n    loc: '615702'\n  }, {\n    id: 2,\n    name: 'Moscow',\n    loc: '2122265'\n  }, {\n    id: 3,\n    name: 'Berlin',\n    loc: '638242'\n  }],\n  weatherData: null,\n  currentPlace: 0,\n  isFetching: true,\n  isError: false\n};\n\nconst weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_WEATHER:\n      return { ...state,\n        weatherData: action.weather\n      };\n\n    case SET_CURRENT:\n      {\n        return { ...state,\n          currentPlace: action.currentPlace\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_ERROR:\n      {\n        return { ...state,\n          isError: action.isError\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setWeather = weather => ({\n  type: SET_WEATHER,\n  weather\n});\nexport const setCurrent = currentPlace => ({\n  type: SET_CURRENT,\n  currentPlace\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleIsError = isError => ({\n  type: TOGGLE_IS_ERROR,\n  isError\n});\nexport default weatherReducer;","map":{"version":3,"sources":["E:/github/weather-app/src/redux/weatherReducer.js"],"names":["SET_WEATHER","SET_CURRENT","TOGGLE_IS_FETCHING","TOGGLE_IS_ERROR","initialState","places","id","name","loc","weatherData","currentPlace","isFetching","isError","weatherReducer","state","action","type","weather","setWeather","setCurrent","toggleIsFetching","toggleIsError"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CACN;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,GAAG,EAAE;AAA7B,GADM,EAEN;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAFM,EAGN;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,GAAG,EAAE;AAA9B,GAHM,CADW;AAMnBC,EAAAA,WAAW,EAAE,IANM;AAOnBC,EAAAA,YAAY,EAAE,CAPK;AAQnBC,EAAAA,UAAU,EAAE,IARO;AASnBC,EAAAA,OAAO,EAAE;AATU,CAArB;;AAYA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,WAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYL,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAAhC,OAAP;;AAEF,SAAKhB,WAAL;AAAkB;AAChB,eAAO,EAAE,GAAGa,KAAL;AAAYJ,UAAAA,YAAY,EAAEK,MAAM,CAACL;AAAjC,SAAP;AACD;;AAED,SAAKR,kBAAL;AAAyB;AACvB,eAAO,EAAE,GAAGY,KAAL;AAAYH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAA/B,SAAP;AACD;;AAED,SAAKR,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGW,KAAL;AAAYF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AAA5B,SAAP;AACD;;AAED;AACE,aAAOE,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,OAAO,MAAMI,UAAU,GAAID,OAAD,KAAc;AAAED,EAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,EAAAA;AAArB,CAAd,CAAnB;AACP,OAAO,MAAME,UAAU,GAAIT,YAAD,KAAmB;AAC3CM,EAAAA,IAAI,EAAEf,WADqC;AAE3CS,EAAAA;AAF2C,CAAnB,CAAnB;AAIP,OAAO,MAAMU,gBAAgB,GAAIT,UAAD,KAAiB;AAC/CK,EAAAA,IAAI,EAAEd,kBADyC;AAE/CS,EAAAA;AAF+C,CAAjB,CAAzB;AAIP,OAAO,MAAMU,aAAa,GAAIT,OAAD,KAAc;AAAEI,EAAAA,IAAI,EAAEb,eAAR;AAAyBS,EAAAA;AAAzB,CAAd,CAAtB;AAEP,eAAeC,cAAf","sourcesContent":["const SET_WEATHER = 'SET_WEATHER';\nconst SET_CURRENT = 'SET_CURRENT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_ERROR = 'TOGGLE_IS_ERROR';\n\nconst initialState = {\n  places: [\n    { id: 1, name: 'Paris', loc: '615702' },\n    { id: 2, name: 'Moscow', loc: '2122265' },\n    { id: 3, name: 'Berlin', loc: '638242' },\n  ],\n  weatherData: null,\n  currentPlace: 0,\n  isFetching: true,\n  isError: false,\n};\n\nconst weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_WEATHER:\n      return { ...state, weatherData: action.weather };\n\n    case SET_CURRENT: {\n      return { ...state, currentPlace: action.currentPlace };\n    }\n\n    case TOGGLE_IS_FETCHING: {\n      return { ...state, isFetching: action.isFetching };\n    }\n\n    case TOGGLE_IS_ERROR: {\n      return { ...state, isError: action.isError };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const setWeather = (weather) => ({ type: SET_WEATHER, weather });\nexport const setCurrent = (currentPlace) => ({\n  type: SET_CURRENT,\n  currentPlace,\n});\nexport const toggleIsFetching = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\nexport const toggleIsError = (isError) => ({ type: TOGGLE_IS_ERROR, isError });\n\nexport default weatherReducer;\n"]},"metadata":{},"sourceType":"module"}